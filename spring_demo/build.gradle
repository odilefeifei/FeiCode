buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	/*解析xml*/
	//compile('org.dom4j:com.springsource.org.dom4j:1.6.1')
	compile('dom4j:dom4j:1.6.1')
	compile('com.thoughtworks.xstream:xstream:1.4.9')
	//compile('org.springframework.boot:spring-boot-starter-security')
	//compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.scribe:scribe:1.3.7')
	compile('com.alibaba:fastjson:1.2.2')
	compile('org.webjars:materializecss:0.96.0')
	compile('org.webjars:jquery:2.1.4')
//	compile("org.apache.tomcat.embed:tomcat-embed-core:8.5.27")
	//mysql
	compile('mysql:mysql-connector-java')
	compile('com.alibaba:druid:1.0.18')
	//jdbc
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	//mybatis
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')

//	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//runtime('mysql:mysql-connector-java')

}

// 在idea 的 module 中忽略 projects 目录
/*project("projects") {
	ideaModule.enabled = false
}*/


/**
 * idea 里面忽略根项目，也就是说不将根项目设置为 module
 */
/*
gradle.projectsEvaluated {
	gradle.rootProject {
		ideaModule.enabled = false
		idea {
			project {
				// modules = subprojects*.idea.module
				// 如果某个子项目的 ideaModule 设置为 false，则不会在 idea 中生成 module
				def modulesToInclude = subprojects.findAll {it.ideaModule.enabled == true}
				modules = modulesToInclude.idea.module
			}
		}
	}
}*/
